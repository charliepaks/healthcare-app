"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/RecordButton.js":
/*!************************************!*\
  !*** ./components/RecordButton.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RecordButton; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// import React, { useState, useRef } from \"react\";\n// export default function RecordButton({\n//   sourceLang,\n//   targetLang,\n//   onResult,\n// }) {\n//   // We'll do the entire pipeline: record → transcribe → translate → TTS\n//   const [recording, setRecording] = useState(false);\n//   const mediaRecorderRef = useRef(null);\n//   const audioChunksRef = useRef([]);\n//   const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8000\";\n//   const startRecording = async () => {\n//     const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n//     const recorder = new MediaRecorder(stream);\n//     mediaRecorderRef.current = recorder;\n//     audioChunksRef.current = [];\n//     recorder.ondataavailable = (e) => {\n//       if (e.data.size > 0) {\n//         audioChunksRef.current.push(e.data);\n//       }\n//     };\n//     recorder.onstop = async () => {\n//       setRecording(false);\n//       // Combine into single Blob\n//       const blob = new Blob(audioChunksRef.current, { type: \"audio/webm\" });\n//       audioChunksRef.current = [];\n//       // Send to backend for transcription (sourceLang)\n//       const formData = new FormData();\n//       formData.append(\"file\", blob, \"recorded.webm\");\n//       // 1) Transcription\n//       const speechRes = await fetch(`${API_URL}/api/speech/transcribe?lang=${sourceLang}`, {\n//         method: \"POST\",\n//         body: formData,\n//       });\n//       if (!speechRes.ok) {\n//         console.error(\"Speech transcription failed:\", await speechRes.text());\n//         return;\n//       }\n//       const speechData = await speechRes.json(); // { transcript: \"...\" }\n//       const originalText = speechData.transcript;\n//       // 2) Translation\n//       const translateRes = await fetch(`${API_URL}/api/translate`, {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({\n//           text: originalText,\n//           source_lang: sourceLang,\n//           target_lang: targetLang,\n//         }),\n//       });\n//       const translateData = await translateRes.json();\n//       const translatedText = translateData.translated_text;\n//       // 3) TTS\n//       const ttsRes = await fetch(`${API_URL}/api/tts`, {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({\n//           text: translatedText,\n//           lang: targetLang,\n//         }),\n//       });\n//       const ttsData = await ttsRes.json(); // { audio_base64: \"...\" }\n//       const audioBase64 = ttsData.audio_base64;\n//       // Return everything to the parent\n//       if (onResult) {\n//         onResult({\n//           originalText,\n//           translatedText,\n//           audioBase64,\n//         });\n//       }\n//     };\n//     // Start\n//     recorder.start();\n//     setRecording(true);\n//   };\n//   const stopRecording = () => {\n//     const recorder = mediaRecorderRef.current;\n//     if (!recorder || recorder.state !== \"recording\") {\n//       return;\n//     }\n//     recorder.stop();\n//   };\n//   return (\n//     <div className=\"flex space-x-3 my-3\">\n//       <button\n//         onClick={startRecording}\n//         disabled={recording}\n//         className={`px-4 py-2 rounded font-semibold ${\n//           recording ? \"bg-gray-300\" : \"bg-blue-600\"\n//         } text-white`}\n//       >\n//         {recording ? \"Recording...\" : \"Start\"}\n//       </button>\n//       <button\n//         onClick={stopRecording}\n//         disabled={!recording}\n//         className={`px-4 py-2 rounded font-semibold ${\n//           recording ? \"bg-red-600\" : \"bg-gray-300\"\n//         } text-white`}\n//       >\n//         Stop\n//       </button>\n//     </div>\n//   );\n// }\n\nvar _s = $RefreshSig$();\n\nfunction RecordButton(param) {\n    let { sourceLang, targetLang, onResult } = param;\n    _s();\n    const [recording, setRecording] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const mediaRecorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const audioChunksRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const API_URL = \"http://127.0.0.1:8000\";\n    const startRecording = async ()=>{\n        const stream = await navigator.mediaDevices.getUserMedia({\n            audio: true\n        });\n        const recorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = recorder;\n        audioChunksRef.current = [];\n        recorder.ondataavailable = (e)=>{\n            if (e.data.size > 0) {\n                audioChunksRef.current.push(e.data);\n            }\n        };\n        recorder.onstop = async ()=>{\n            setRecording(false);\n            setLoading(true); // Show loader\n            const blob = new Blob(audioChunksRef.current, {\n                type: \"audio/webm\"\n            });\n            audioChunksRef.current = [];\n            const formData = new FormData();\n            formData.append(\"file\", blob, \"recorded.webm\");\n            try {\n                // 1) Transcription\n                const speechRes = await fetch(\"https://healthcareappbackend.xyz/api/speech/transcribe?lang=\".concat(sourceLang), {\n                    method: \"POST\",\n                    body: formData\n                });\n                if (!speechRes.ok) {\n                    console.error(\"Speech transcription failed:\", await speechRes.text());\n                    setLoading(false);\n                    return;\n                }\n                const speechData = await speechRes.json();\n                const originalText = speechData.transcript;\n                // 2) Translation\n                const translateRes = await fetch(\"https://healthcareappbackend.xyz/api/translate\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        text: originalText,\n                        source_lang: sourceLang,\n                        target_lang: targetLang\n                    })\n                });\n                const translateData = await translateRes.json();\n                const translatedText = translateData.translated_text;\n                // 3) TTS\n                const ttsRes = await fetch(\"https://healthcareappbackend.xyz/api/tts\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        text: translatedText,\n                        lang: targetLang\n                    })\n                });\n                const ttsData = await ttsRes.json();\n                const audioBase64 = ttsData.audio_base64;\n                if (onResult) {\n                    onResult({\n                        originalText,\n                        translatedText,\n                        audioBase64\n                    });\n                }\n            } catch (error) {\n                console.error(\"Error processing audio:\", error);\n            }\n            setLoading(false); // Hide loader when API calls complete\n        };\n        recorder.start();\n        setRecording(true);\n    };\n    const stopRecording = ()=>{\n        const recorder = mediaRecorderRef.current;\n        if (!recorder || recorder.state !== \"recording\") {\n            return;\n        }\n        recorder.stop();\n    };\n    // const stopRecording = () => {\n    //   const recorder = mediaRecorderRef.current;\n    //   if (!recorder || recorder.state !== \"recording\") {\n    //     return;\n    //   }\n    //   // Collect audio chunks and process when stopped\n    //   const audioChunks = [];\n    //   // Clear existing data handlers to prevent duplicates\n    //   recorder.ondataavailable = null;\n    //   recorder.onstop = null;\n    //   // Handle audio data collection\n    //   recorder.ondataavailable = (e) => {\n    //     audioChunks.push(e.data);\n    //   };\n    //   recorder.onstop = async () => {\n    //     try {\n    //       // Create audio blob from collected chunks\n    //       const audioBlob = new Blob(audioChunks, { type: \"audio/wav\" });\n    //       // Example: Send to backend\n    //       const formData = new FormData();\n    //       formData.append(\"audio\", audioBlob, \"recording.wav\");\n    //       const response = await fetch(\"/api/upload-audio\", {\n    //         method: \"POST\",\n    //         body: formData,\n    //         // Add headers if needed (e.g., authorization)\n    //       });\n    //       if (!response.ok) {\n    //         throw new Error(`HTTP error! status: ${response.status}`);\n    //       }\n    //       // Process successful response\n    //       const result = await response.json();\n    //       console.log(\"Upload success:\", result);\n    //     } catch (error) {\n    //       console.error(\"Audio processing failed:\", error);\n    //       // Add error handling (e.g., show user notification)\n    //     }\n    //   };\n    //   // Stop recording last to capture all chunks\n    //   recorder.stop();\n    // };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col items-center space-y-3\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: startRecording,\n                disabled: recording || loading,\n                className: \"px-4 py-2 text-white bg-green-600 rounded-lg disabled:opacity-50 w-40\",\n                children: recording ? \"Recording...\" : \"Start\"\n            }, void 0, false, {\n                fileName: \"/Users/admin/Documents/healthcare-app/frontend/components/RecordButton.js\",\n                lineNumber: 256,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: stopRecording,\n                disabled: !recording || loading,\n                className: \"px-4 py-2 text-white bg-red-600 rounded-lg disabled:opacity-50 w-40\",\n                children: \"Stop\"\n            }, void 0, false, {\n                fileName: \"/Users/admin/Documents/healthcare-app/frontend/components/RecordButton.js\",\n                lineNumber: 264,\n                columnNumber: 7\n            }, this),\n            loading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-5 h-5 border-4 border-gray-300 border-t-blue-500 rounded-full animate-spin\"\n                    }, void 0, false, {\n                        fileName: \"/Users/admin/Documents/healthcare-app/frontend/components/RecordButton.js\",\n                        lineNumber: 274,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-gray-700\",\n                        children: \"Processing...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/admin/Documents/healthcare-app/frontend/components/RecordButton.js\",\n                        lineNumber: 275,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/admin/Documents/healthcare-app/frontend/components/RecordButton.js\",\n                lineNumber: 273,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/admin/Documents/healthcare-app/frontend/components/RecordButton.js\",\n        lineNumber: 255,\n        columnNumber: 5\n    }, this);\n}\n_s(RecordButton, \"0l7likTzZyM/AEsIw1mjcxQwj88=\");\n_c = RecordButton;\nvar _c;\n$RefreshReg$(_c, \"RecordButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/RecordButton.js\n"));

/***/ })

});